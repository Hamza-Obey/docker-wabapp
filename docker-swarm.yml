services:
  client-react-nginx:
    image: hamzaobey/client-react-nginx:0.0.1
    deploy:
      mode: replicated            #Runs multiple instances (replicas) of the service
      replicas: 1                 #only one instance of that service will run
      update_config:              #defines the update startegy when deployin a new version
        order: start-first        #Starts the new container before stopping the old one (ensures zero downtime).
    init: true
    networks:
      - frontend
    ports:
      - 80:8080
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/ping"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
  api-node:
    image: hamzaobey/api-node:0.0.1
    deploy:
      mode: replicated
      replicas: 2
      update_config:
        order: start-first
    init: true
    depends_on:
      - db
    environment:
      - DATABASE_URL_FILE=/run/secrets/database-url
    secrets:
      - database-url
    networks:
      - frontend
      - backend
    ports:
      - 3000:3000
    healthcheck:
      test: ["CMD", "node", "/usr/src/app/healthcheck.js"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
  api-golang:
    image: hamzaobey/api-golang:0.0.1
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        order: start-first
    init: true
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgres://postgres:foobarbaz@db:5432/postgres
    networks:
      - frontend
      - backend
    ports:
      - 8080:8080
    healthcheck:
      test: ["CMD", "/healthcheck"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
  db:
    image: postgres:15.1-alpine
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - PGUSER=postgres
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres-passwd
    secrets:
      - postgres-passwd
    networks:
      - backend
    ports:
      - 5432:5432
volumes:
  pgdata:
networks:
  frontend:
  backend:
secrets:
  database-url:
    external: true
  postgres-passwd:
    external: true
